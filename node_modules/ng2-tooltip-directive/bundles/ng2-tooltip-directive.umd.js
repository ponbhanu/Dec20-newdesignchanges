(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ng2-tooltip-directive', ['exports', '@angular/core', '@angular/common'], factory) :
    (factory((global['ng2-tooltip-directive'] = {}),global.ng.core,global.ng.common));
}(this, (function (exports,core,common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */
    var TooltipComponent = (function () {
        function TooltipComponent(elementRef, renderer) {
            this.elementRef = elementRef;
            this.renderer = renderer;
            this._show = false;
            /* tslint:enable */
            this.events = new core.EventEmitter();
        }
        /**
         * @param {?} event
         * @return {?}
         */
        TooltipComponent.prototype.transitionEnd = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (this.show) {
                    this.events.emit('shown');
                }
            };
        Object.defineProperty(TooltipComponent.prototype, "show", {
            get: /**
             * @return {?}
             */ function () {
                return this._show;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value) {
                    this.setPosition();
                }
                this._show = this.hostClassShow = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipComponent.prototype, "placement", {
            get: /**
             * @return {?}
             */ function () {
                return this.data.options.placement;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipComponent.prototype, "elemetn", {
            get: /**
             * @return {?}
             */ function () {
                return this.data.element;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipComponent.prototype, "elementPosition", {
            get: /**
             * @return {?}
             */ function () {
                return this.data.elementPosition;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipComponent.prototype, "options", {
            get: /**
             * @return {?}
             */ function () {
                return this.data.options;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipComponent.prototype, "value", {
            get: /**
             * @return {?}
             */ function () {
                return this.data.value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipComponent.prototype, "tooltipOffset", {
            get: /**
             * @return {?}
             */ function () {
                return Number(this.data.options.offset);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipComponent.prototype, "isThemeLight", {
            get: /**
             * @return {?}
             */ function () {
                return this.options['theme'] === 'light';
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        TooltipComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                this.setPlacementClass();
                this.setZIndex();
                this.setCustomClass();
                this.setAnimationDuration();
                this.setStyles();
            };
        /**
         * @return {?}
         */
        TooltipComponent.prototype.setPosition = /**
         * @return {?}
         */
            function () {
                /** @type {?} */
                var elemetnHeight = this.elemetn.offsetHeight;
                /** @type {?} */
                var elemetnWidth = this.elemetn.offsetWidth;
                /** @type {?} */
                var tooltipHeight = this.elementRef.nativeElement.clientHeight;
                /** @type {?} */
                var tooltipWidth = this.elementRef.nativeElement.offsetWidth;
                /** @type {?} */
                var scrollY = window.pageYOffset;
                /** @type {?} */
                var tooltip = this.elementRef.nativeElement;
                if (this.placement === 'top') {
                    this.hostStyleTop = (this.elementPosition.top + scrollY) - (tooltipHeight + this.tooltipOffset) + 'px';
                }
                if (this.placement === 'bottom') {
                    this.hostStyleTop = (this.elementPosition.top + scrollY) + elemetnHeight + this.tooltipOffset + 'px';
                }
                if (this.placement === 'top' || this.placement === 'bottom') {
                    this.hostStyleLeft = (this.elementPosition.left + elemetnWidth / 2) - tooltipWidth / 2 + 'px';
                }
                if (this.placement === 'left') {
                    this.hostStyleLeft = this.elementPosition.left - tooltipWidth - this.tooltipOffset + 'px';
                }
                if (this.placement === 'right') {
                    this.hostStyleLeft = this.elementPosition.left + elemetnWidth + this.tooltipOffset + 'px';
                }
                if (this.placement === 'left' || this.placement === 'right') {
                    this.hostStyleTop = (this.elementPosition.top + scrollY) + elemetnHeight / 2 - tooltip.clientHeight / 2 + 'px';
                }
            };
        /**
         * @return {?}
         */
        TooltipComponent.prototype.setPlacementClass = /**
         * @return {?}
         */
            function () {
                this.renderer.addClass(this.elementRef.nativeElement, 'tooltip-' + this.placement);
            };
        /**
         * @return {?}
         */
        TooltipComponent.prototype.setZIndex = /**
         * @return {?}
         */
            function () {
                if (this.options['z-index'] !== 0) {
                    this.hostStyleZIndex = this.options['z-index'];
                }
            };
        /**
         * @return {?}
         */
        TooltipComponent.prototype.setCustomClass = /**
         * @return {?}
         */
            function () {
                if (this.options['tooltip-class']) {
                    this.renderer.addClass(this.elementRef.nativeElement, this.options['tooltip-class']);
                }
            };
        /**
         * @return {?}
         */
        TooltipComponent.prototype.setAnimationDuration = /**
         * @return {?}
         */
            function () {
                if (Number(this.options['animation-duration']) != this.options['animation-duration-default']) {
                    this.hostStyleTransition = 'opacity ' + this.options['animation-duration'] + 'ms';
                }
            };
        /**
         * @return {?}
         */
        TooltipComponent.prototype.setStyles = /**
         * @return {?}
         */
            function () {
                this.hostClassShadow = this.options['shadow'];
                this.hostClassLight = this.isThemeLight;
            };
        TooltipComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'tooltip',
                        template: "<div *ngIf=\"isThemeLight\" class=\"tooltip-arrow\"></div>{{value}}",
                        host: { 'class': 'tooltip' },
                        styles: [":host{max-width:200px;background-color:#000;color:#fff;text-align:center;border-radius:6px;padding:5px 8px;position:absolute;z-index:1000;display:block;opacity:0;transition:opacity .3s}:host.tooltip-show{opacity:1}:host.tooltip-shadow{box-shadow:0 7px 15px -5px rgba(0,0,0,.4)}:host.tooltip-light.tooltip-shadow{box-shadow:0 5px 15px -5px rgba(0,0,0,.4)}:host.tooltip::after{content:\"\";position:absolute;border-style:solid}:host.tooltip-top::after{top:100%;left:50%;margin-left:-5px;border-width:5px;border-color:#000 transparent transparent}:host.tooltip-bottom::after{bottom:100%;left:50%;margin-left:-5px;border-width:5px;border-color:transparent transparent #000}:host.tooltip-left::after{top:50%;left:100%;margin-top:-5px;border-width:5px;border-color:transparent transparent transparent #000}:host.tooltip-right::after{top:50%;right:100%;margin-top:-5px;border-width:5px;border-color:transparent #000 transparent transparent}:host.tooltip-light::after{display:none}:host.tooltip-light{border:1px solid rgba(0,0,0,.06);background-color:#fff;color:#000}:host.tooltip-light .tooltip-arrow{position:absolute;width:10px;height:10px;-webkit-transform:rotate(135deg);transform:rotate(135deg);background-color:rgba(0,0,0,.07)}:host.tooltip-light .tooltip-arrow::after{background-color:#fff;content:'';display:block;position:absolute;width:10px;height:10px}:host.tooltip-top.tooltip-light{margin-top:-2px}:host.tooltip-top.tooltip-light .tooltip-arrow{top:100%;left:50%;margin-top:-4px;margin-left:-5px;background:linear-gradient(to bottom left,rgba(0,0,0,.07) 50%,transparent 50%)}:host.tooltip-top.tooltip-light .tooltip-arrow::after{top:1px;right:1px}:host.tooltip-bottom.tooltip-light .tooltip-arrow{bottom:100%;left:50%;margin-bottom:-4px;margin-left:-5px;background:linear-gradient(to top right,rgba(0,0,0,.1) 50%,transparent 50%)}:host.tooltip-bottom.tooltip-light .tooltip-arrow::after{top:-1px;right:-1px}:host.tooltip-left.tooltip-light .tooltip-arrow{top:50%;left:100%;margin-top:-5px;margin-left:-4px;background:linear-gradient(to bottom right,rgba(0,0,0,.07) 50%,transparent 50%)}:host.tooltip-left.tooltip-light .tooltip-arrow::after{top:1px;right:-1px}:host.tooltip-right.tooltip-light .tooltip-arrow{top:50%;right:100%;margin-top:-5px;margin-right:-4px;background:linear-gradient(to top left,rgba(0,0,0,.07) 50%,transparent 50%)}:host.tooltip-right.tooltip-light .tooltip-arrow::after{top:-1px;right:1px}"]
                    },] },
        ];
        /** @nocollapse */
        TooltipComponent.ctorParameters = function () {
            return [
                { type: core.ElementRef },
                { type: core.Renderer2 }
            ];
        };
        TooltipComponent.propDecorators = {
            data: [{ type: core.Input }],
            hostStyleTop: [{ type: core.HostBinding, args: ['style.top',] }],
            hostStyleLeft: [{ type: core.HostBinding, args: ['style.left',] }],
            hostStyleZIndex: [{ type: core.HostBinding, args: ['style.z-index',] }],
            hostStyleTransition: [{ type: core.HostBinding, args: ['style.transition',] }],
            hostClassShow: [{ type: core.HostBinding, args: ['class.tooltip-show',] }],
            hostClassShadow: [{ type: core.HostBinding, args: ['class.tooltip-shadow',] }],
            hostClassLight: [{ type: core.HostBinding, args: ['class.tooltip-light',] }],
            transitionEnd: [{ type: core.HostListener, args: ['transitionend', ['$event'],] }],
            show: [{ type: core.Input }]
        };
        return TooltipComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */
    /** @type {?} */
    var defaultOptions = {
        'placement': 'top',
        'delay': 0,
        'show-delay': 0,
        'hide-delay': 300,
        'hide-delay-mobile': 1500,
        'z-index': 0,
        'animation-duration': 300,
        'animation-duration-default': 300,
        'trigger': 'hover',
        'tooltip-class': '',
        'display': true,
        'display-mobile': true,
        'shadow': true,
        'theme': 'dark',
        'offset': 8,
        'id': false
    };

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */
    var TooltipDirective = (function () {
        function TooltipDirective(elementRef, componentFactoryResolver, appRef, injector) {
            this.elementRef = elementRef;
            this.componentFactoryResolver = componentFactoryResolver;
            this.appRef = appRef;
            this.injector = injector;
            this._showDelay = 0;
            this._hideDelay = 300;
            this._options = {};
            this.events = new core.EventEmitter();
        }
        Object.defineProperty(TooltipDirective.prototype, "options", {
            get: /**
             * @return {?}
             */ function () {
                return this._options;
            },
            /* tslint:enable */
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value && defaultOptions) {
                    this._options = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "placement", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value) {
                    this._options['placement'] = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "delay", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value) {
                    this._options['delay'] = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "hideDelayMobile", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value) {
                    this._options['hide-delay-mobile'] = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "zIndex", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value) {
                    this._options['z-index'] = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "animationDuration", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value) {
                    this._options['animation-duration'] = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "trigger", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value) {
                    this._options['trigger'] = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "tooltipClass", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value) {
                    this._options['tooltip-class'] = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "display", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value) {
                    this._options['display'] = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "displayMobile", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value) {
                    this._options['display-mobile'] = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "shadow", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._options['shadow'] = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "theme", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value) {
                    this._options['theme'] = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "offset", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value) {
                    this._options['offset'] = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "id", {
            get: /**
             * @return {?}
             */ function () {
                return this._id;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._id = value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "showDelay", {
            get: /**
             * @return {?}
             */ function () {
                /** @type {?} */
                var result = this.options['delay'] || this._showDelay;
                if (this.isMobile) {
                    return 0;
                }
                else {
                    return result;
                }
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value) {
                    this._showDelay = this._options['show-delay'] = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "hideDelay", {
            get: /**
             * @return {?}
             */ function () {
                if (this.isMobile) {
                    return (this._hideDelay >= this.options['hide-delay-mobile']) ? this._hideDelay : this.options['hide-delay-mobile'];
                }
                else {
                    return this._hideDelay;
                }
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value) {
                    this._hideDelay = this._options['hide-delay'] = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "isTooltipDestroyed", {
            get: /**
             * @return {?}
             */ function () {
                return this.componentRef && this.componentRef.hostView.destroyed;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "destroyDelay", {
            get: /**
             * @return {?}
             */ function () {
                return Number(this.hideDelay) + Number(this.options['animation-duration']);
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        TooltipDirective.prototype.onMouseEnter = /**
         * @return {?}
         */
            function () {
                if (this.isDisplayOnHover == false) {
                    return;
                }
                this.show();
            };
        /**
         * @return {?}
         */
        TooltipDirective.prototype.onMouseLeave = /**
         * @return {?}
         */
            function () {
                if (this.options['trigger'] === 'hover') {
                    this.destroyTooltip();
                }
            };
        /**
         * @return {?}
         */
        TooltipDirective.prototype.onClick = /**
         * @return {?}
         */
            function () {
                var _this = this;
                if (this.isDisplayOnClick == false) {
                    return;
                }
                this.show();
                this.hideAfterClickTimeoutId = window.setTimeout(function () {
                    _this.destroyTooltip();
                }, 0);
            };
        /**
         * @return {?}
         */
        TooltipDirective.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                this.applyOptionsDefault(defaultOptions, this.options);
            };
        /**
         * @return {?}
         */
        TooltipDirective.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                if (this.componentSubscribe) {
                    this.componentSubscribe.unsubscribe();
                }
            };
        /**
         * @return {?}
         */
        TooltipDirective.prototype.getElementPosition = /**
         * @return {?}
         */
            function () {
                this.elementPosition = this.elementRef.nativeElement.getBoundingClientRect();
            };
        /**
         * @return {?}
         */
        TooltipDirective.prototype.createTooltip = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.clearTimeouts();
                this.getElementPosition();
                this.createTimeoutId = window.setTimeout(function () {
                    _this.appendComponentToBody(TooltipComponent);
                }, this.showDelay);
                this.showTimeoutId = window.setTimeout(function () {
                    _this.showTooltipElem();
                }, this.showDelay);
            };
        /**
         * @return {?}
         */
        TooltipDirective.prototype.destroyTooltip = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.clearTimeouts();
                if (this.isTooltipDestroyed == false) {
                    this.hideTimeoutId = window.setTimeout(function () {
                        _this.hideTooltip();
                    }, this.hideDelay);
                    this.destroyTimeoutId = window.setTimeout(function () {
                        if (!_this.componentRef || _this.isTooltipDestroyed) {
                            return;
                        }
                        _this.appRef.detachView(_this.componentRef.hostView);
                        _this.componentRef.destroy();
                        _this.events.emit('hidden');
                    }, this.destroyDelay);
                }
            };
        /**
         * @return {?}
         */
        TooltipDirective.prototype.showTooltipElem = /**
         * @return {?}
         */
            function () {
                this.clearTimeouts();
                ((this.componentRef.instance)).show = true;
                this.events.emit('show');
            };
        /**
         * @return {?}
         */
        TooltipDirective.prototype.hideTooltip = /**
         * @return {?}
         */
            function () {
                if (!this.componentRef || this.isTooltipDestroyed) {
                    return;
                }
                ((this.componentRef.instance)).show = false;
                this.events.emit('hide');
            };
        /**
         * @param {?} component
         * @param {?=} data
         * @return {?}
         */
        TooltipDirective.prototype.appendComponentToBody = /**
         * @param {?} component
         * @param {?=} data
         * @return {?}
         */
            function (component, data) {
                var _this = this;
                if (data === void 0) {
                    data = {};
                }
                this.componentRef = this.componentFactoryResolver
                    .resolveComponentFactory(component)
                    .create(this.injector);
                ((this.componentRef.instance)).data = {
                    value: this.tooltipValue,
                    element: this.elementRef.nativeElement,
                    elementPosition: this.elementPosition,
                    options: this.options
                };
                this.appRef.attachView(this.componentRef.hostView);
                /** @type {?} */
                var domElem = (((this.componentRef.hostView)).rootNodes[0]);
                document.body.appendChild(domElem);
                this.componentSubscribe = ((this.componentRef.instance)).events.subscribe(function (event) {
                    _this.handleEvents(event);
                });
            };
        /**
         * @return {?}
         */
        TooltipDirective.prototype.clearTimeouts = /**
         * @return {?}
         */
            function () {
                if (this.createTimeoutId) {
                    clearTimeout(this.createTimeoutId);
                }
                if (this.showTimeoutId) {
                    clearTimeout(this.showTimeoutId);
                }
                if (this.hideTimeoutId) {
                    clearTimeout(this.hideTimeoutId);
                }
                if (this.destroyTimeoutId) {
                    clearTimeout(this.destroyTimeoutId);
                }
            };
        Object.defineProperty(TooltipDirective.prototype, "isDisplayOnHover", {
            get: /**
             * @return {?}
             */ function () {
                if (this.options['trigger'] != 'hover') {
                    return false;
                }
                if (this.isMobile) {
                    return false;
                }
                if (this.options['display'] == false) {
                    return false;
                }
                return true;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "isDisplayOnClick", {
            get: /**
             * @return {?}
             */ function () {
                if (this.options['trigger'] != 'click' && this.isMobile == false) {
                    return false;
                }
                if (this.options['display'] == false) {
                    return false;
                }
                if (this.options['display-mobile'] == false && this.isMobile) {
                    return false;
                }
                return true;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TooltipDirective.prototype, "isMobile", {
            get: /**
             * @return {?}
             */ function () {
                /** @type {?} */
                var check = false;
                (function (a) {
                    if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4)))
                        check = true;
                })(navigator.userAgent || navigator.vendor);
                return check;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {?} defaultOptions
         * @param {?} options
         * @return {?}
         */
        TooltipDirective.prototype.applyOptionsDefault = /**
         * @param {?} defaultOptions
         * @param {?} options
         * @return {?}
         */
            function (defaultOptions$$1, options) {
                this._defaultOptions = Object.assign({}, defaultOptions$$1);
                this.options = Object.assign(this._defaultOptions, options);
            };
        /**
         * @param {?} event
         * @return {?}
         */
        TooltipDirective.prototype.handleEvents = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (event === 'shown') {
                    this.events.emit('shown');
                }
            };
        /**
         * @return {?}
         */
        TooltipDirective.prototype.show = /**
         * @return {?}
         */
            function () {
                if (!this.componentRef || this.isTooltipDestroyed) {
                    this.createTooltip();
                }
                else if (!this.isTooltipDestroyed) {
                    this.showTooltipElem();
                }
            };
        /**
         * @return {?}
         */
        TooltipDirective.prototype.hide = /**
         * @return {?}
         */
            function () {
                this.destroyTooltip();
            };
        TooltipDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: '[tooltip]'
                    },] },
        ];
        /** @nocollapse */
        TooltipDirective.ctorParameters = function () {
            return [
                { type: core.ElementRef },
                { type: core.ComponentFactoryResolver },
                { type: core.ApplicationRef },
                { type: core.Injector }
            ];
        };
        TooltipDirective.propDecorators = {
            tooltipValue: [{ type: core.Input, args: ['tooltip',] }],
            options: [{ type: core.Input, args: ['options',] }],
            placement: [{ type: core.Input, args: ['placement',] }],
            delay: [{ type: core.Input, args: ['delay',] }],
            hideDelayMobile: [{ type: core.Input, args: ['hide-delay-mobile',] }],
            zIndex: [{ type: core.Input, args: ['z-index',] }],
            animationDuration: [{ type: core.Input, args: ['animation-duration',] }],
            trigger: [{ type: core.Input, args: ['trigger',] }],
            tooltipClass: [{ type: core.Input, args: ['tooltip-class',] }],
            display: [{ type: core.Input, args: ['display',] }],
            displayMobile: [{ type: core.Input, args: ['display-mobile',] }],
            shadow: [{ type: core.Input, args: ['shadow',] }],
            theme: [{ type: core.Input, args: ['theme',] }],
            offset: [{ type: core.Input, args: ['offset',] }],
            id: [{ type: core.Input, args: ['id',] }],
            showDelay: [{ type: core.Input, args: ['show-delay',] }],
            hideDelay: [{ type: core.Input, args: ['hide-delay',] }],
            events: [{ type: core.Output }],
            onMouseEnter: [{ type: core.HostListener, args: ['focusin',] }, { type: core.HostListener, args: ['mouseenter',] }],
            onMouseLeave: [{ type: core.HostListener, args: ['focusout',] }, { type: core.HostListener, args: ['mouseleave',] }],
            onClick: [{ type: core.HostListener, args: ['click', ['$event'],] }]
        };
        return TooltipDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */
    var TooltipModule = (function () {
        function TooltipModule() {
        }
        TooltipModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [
                            TooltipDirective,
                            TooltipComponent
                        ],
                        imports: [
                            common.CommonModule
                        ],
                        exports: [
                            TooltipDirective
                        ],
                        entryComponents: [
                            TooltipComponent
                        ]
                    },] },
        ];
        return TooltipModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */

    exports.TooltipComponent = TooltipComponent;
    exports.TooltipDirective = TooltipDirective;
    exports.TooltipModule = TooltipModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,