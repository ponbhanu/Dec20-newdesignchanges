/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Directive, ElementRef, HostListener, Input, ComponentFactoryResolver, ApplicationRef, Injector, Output, EventEmitter } from '@angular/core';
import { TooltipComponent } from './tooltip.component';
import { defaultOptions } from './options';
/**
 * @record
 */
export function AdComponent() { }
/** @type {?} */
AdComponent.prototype.data;
/** @type {?} */
AdComponent.prototype.show;
/** @type {?} */
AdComponent.prototype.close;
/** @type {?} */
AdComponent.prototype.events;
export class TooltipDirective {
    /**
     * @param {?} elementRef
     * @param {?} componentFactoryResolver
     * @param {?} appRef
     * @param {?} injector
     */
    constructor(elementRef, componentFactoryResolver, appRef, injector) {
        this.elementRef = elementRef;
        this.componentFactoryResolver = componentFactoryResolver;
        this.appRef = appRef;
        this.injector = injector;
        this._showDelay = 0;
        this._hideDelay = 300;
        this._options = {};
        this.events = new EventEmitter();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set options(value) {
        if (value && defaultOptions) {
            this._options = value;
        }
    }
    /**
     * @return {?}
     */
    get options() {
        return this._options;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set placement(value) {
        if (value) {
            this._options['placement'] = value;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set delay(value) {
        if (value) {
            this._options['delay'] = value;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set hideDelayMobile(value) {
        if (value) {
            this._options['hide-delay-mobile'] = value;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set zIndex(value) {
        if (value) {
            this._options['z-index'] = value;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set animationDuration(value) {
        if (value) {
            this._options['animation-duration'] = value;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set trigger(value) {
        if (value) {
            this._options['trigger'] = value;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set tooltipClass(value) {
        if (value) {
            this._options['tooltip-class'] = value;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set display(value) {
        if (value) {
            this._options['display'] = value;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set displayMobile(value) {
        if (value) {
            this._options['display-mobile'] = value;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set shadow(value) {
        this._options['shadow'] = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set theme(value) {
        if (value) {
            this._options['theme'] = value;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set offset(value) {
        if (value) {
            this._options['offset'] = value;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set id(value) {
        this._id = value;
    }
    /**
     * @return {?}
     */
    get id() {
        return this._id;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set showDelay(value) {
        if (value) {
            this._showDelay = this._options['show-delay'] = value;
        }
    }
    /**
     * @return {?}
     */
    get showDelay() {
        /** @type {?} */
        let result = this.options['delay'] || this._showDelay;
        if (this.isMobile) {
            return 0;
        }
        else {
            return result;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set hideDelay(value) {
        if (value) {
            this._hideDelay = this._options['hide-delay'] = value;
        }
    }
    /**
     * @return {?}
     */
    get hideDelay() {
        if (this.isMobile) {
            return (this._hideDelay >= this.options['hide-delay-mobile']) ? this._hideDelay : this.options['hide-delay-mobile'];
        }
        else {
            return this._hideDelay;
        }
    }
    /**
     * @return {?}
     */
    get isTooltipDestroyed() {
        return this.componentRef && this.componentRef.hostView.destroyed;
    }
    /**
     * @return {?}
     */
    get destroyDelay() {
        return Number(this.hideDelay) + Number(this.options['animation-duration']);
    }
    /**
     * @return {?}
     */
    onMouseEnter() {
        if (this.isDisplayOnHover == false) {
            return;
        }
        this.show();
    }
    /**
     * @return {?}
     */
    onMouseLeave() {
        if (this.options['trigger'] === 'hover') {
            this.destroyTooltip();
        }
    }
    /**
     * @return {?}
     */
    onClick() {
        if (this.isDisplayOnClick == false) {
            return;
        }
        this.show();
        this.hideAfterClickTimeoutId = window.setTimeout(() => {
            this.destroyTooltip();
        }, 0);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.applyOptionsDefault(defaultOptions, this.options);
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        if (this.componentSubscribe) {
            this.componentSubscribe.unsubscribe();
        }
    }
    /**
     * @return {?}
     */
    getElementPosition() {
        this.elementPosition = this.elementRef.nativeElement.getBoundingClientRect();
    }
    /**
     * @return {?}
     */
    createTooltip() {
        this.clearTimeouts();
        this.getElementPosition();
        this.createTimeoutId = window.setTimeout(() => {
            this.appendComponentToBody(TooltipComponent);
        }, this.showDelay);
        this.showTimeoutId = window.setTimeout(() => {
            this.showTooltipElem();
        }, this.showDelay);
    }
    /**
     * @return {?}
     */
    destroyTooltip() {
        this.clearTimeouts();
        if (this.isTooltipDestroyed == false) {
            this.hideTimeoutId = window.setTimeout(() => {
                this.hideTooltip();
            }, this.hideDelay);
            this.destroyTimeoutId = window.setTimeout(() => {
                if (!this.componentRef || this.isTooltipDestroyed) {
                    return;
                }
                this.appRef.detachView(this.componentRef.hostView);
                this.componentRef.destroy();
                this.events.emit('hidden');
            }, this.destroyDelay);
        }
    }
    /**
     * @return {?}
     */
    showTooltipElem() {
        this.clearTimeouts();
        (/** @type {?} */ (this.componentRef.instance)).show = true;
        this.events.emit('show');
    }
    /**
     * @return {?}
     */
    hideTooltip() {
        if (!this.componentRef || this.isTooltipDestroyed) {
            return;
        }
        (/** @type {?} */ (this.componentRef.instance)).show = false;
        this.events.emit('hide');
    }
    /**
     * @param {?} component
     * @param {?=} data
     * @return {?}
     */
    appendComponentToBody(component, data = {}) {
        this.componentRef = this.componentFactoryResolver
            .resolveComponentFactory(component)
            .create(this.injector);
        (/** @type {?} */ (this.componentRef.instance)).data = {
            value: this.tooltipValue,
            element: this.elementRef.nativeElement,
            elementPosition: this.elementPosition,
            options: this.options
        };
        this.appRef.attachView(this.componentRef.hostView);
        /** @type {?} */
        const domElem = /** @type {?} */ ((/** @type {?} */ (this.componentRef.hostView)).rootNodes[0]);
        document.body.appendChild(domElem);
        this.componentSubscribe = (/** @type {?} */ (this.componentRef.instance)).events.subscribe((event) => {
            this.handleEvents(event);
        });
    }
    /**
     * @return {?}
     */
    clearTimeouts() {
        if (this.createTimeoutId) {
            clearTimeout(this.createTimeoutId);
        }
        if (this.showTimeoutId) {
            clearTimeout(this.showTimeoutId);
        }
        if (this.hideTimeoutId) {
            clearTimeout(this.hideTimeoutId);
        }
        if (this.destroyTimeoutId) {
            clearTimeout(this.destroyTimeoutId);
        }
    }
    /**
     * @return {?}
     */
    get isDisplayOnHover() {
        if (this.options['trigger'] != 'hover') {
            return false;
        }
        if (this.isMobile) {
            return false;
        }
        if (this.options['display'] == false) {
            return false;
        }
        return true;
    }
    /**
     * @return {?}
     */
    get isDisplayOnClick() {
        if (this.options['trigger'] != 'click' && this.isMobile == false) {
            return false;
        }
        if (this.options['display'] == false) {
            return false;
        }
        if (this.options['display-mobile'] == false && this.isMobile) {
            return false;
        }
        return true;
    }
    /**
     * @return {?}
     */
    get isMobile() {
        /** @type {?} */
        let check = false;
        (function (a) { if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4)))
            check = true; })(navigator.userAgent || navigator.vendor);
        return check;
    }
    ;
    /**
     * @param {?} defaultOptions
     * @param {?} options
     * @return {?}
     */
    applyOptionsDefault(defaultOptions, options) {
        this._defaultOptions = Object.assign({}, defaultOptions);
        this.options = Object.assign(this._defaultOptions, options);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    handleEvents(event) {
        if (event === 'shown') {
            this.events.emit('shown');
        }
    }
    /**
     * @return {?}
     */
    show() {
        if (!this.componentRef || this.isTooltipDestroyed) {
            this.createTooltip();
        }
        else if (!this.isTooltipDestroyed) {
            this.showTooltipElem();
        }
    }
    /**
     * @return {?}
     */
    hide() {
        this.destroyTooltip();
    }
}
TooltipDirective.decorators = [
    { type: Directive, args: [{
                selector: '[tooltip]'
            },] },
];
/** @nocollapse */
TooltipDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: ComponentFactoryResolver },
    { type: ApplicationRef },
    { type: Injector }
];
TooltipDirective.propDecorators = {
    tooltipValue: [{ type: Input, args: ['tooltip',] }],
    options: [{ type: Input, args: ['options',] }],
    placement: [{ type: Input, args: ['placement',] }],
    delay: [{ type: Input, args: ['delay',] }],
    hideDelayMobile: [{ type: Input, args: ['hide-delay-mobile',] }],
    zIndex: [{ type: Input, args: ['z-index',] }],
    animationDuration: [{ type: Input, args: ['animation-duration',] }],
    trigger: [{ type: Input, args: ['trigger',] }],
    tooltipClass: [{ type: Input, args: ['tooltip-class',] }],
    display: [{ type: Input, args: ['display',] }],
    displayMobile: [{ type: Input, args: ['display-mobile',] }],
    shadow: [{ type: Input, args: ['shadow',] }],
    theme: [{ type: Input, args: ['theme',] }],
    offset: [{ type: Input, args: ['offset',] }],
    id: [{ type: Input, args: ['id',] }],
    showDelay: [{ type: Input, args: ['show-delay',] }],
    hideDelay: [{ type: Input, args: ['hide-delay',] }],
    events: [{ type: Output }],
    onMouseEnter: [{ type: HostListener, args: ['focusin',] }, { type: HostListener, args: ['mouseenter',] }],
    onMouseLeave: [{ type: HostListener, args: ['focusout',] }, { type: HostListener, args: ['mouseleave',] }],
    onClick: [{ type: HostListener, args: ['click', ['$event'],] }]
};
if (false) {
    /** @type {?} */
    TooltipDirective.prototype.hideTimeoutId;
    /** @type {?} */
    TooltipDirective.prototype.destroyTimeoutId;
    /** @type {?} */
    TooltipDirective.prototype.hideAfterClickTimeoutId;
    /** @type {?} */
    TooltipDirective.prototype.createTimeoutId;
    /** @type {?} */
    TooltipDirective.prototype.showTimeoutId;
    /** @type {?} */
    TooltipDirective.prototype.componentRef;
    /** @type {?} */
    TooltipDirective.prototype.elementPosition;
    /** @type {?} */
    TooltipDirective.prototype._showDelay;
    /** @type {?} */
    TooltipDirective.prototype._hideDelay;
    /** @type {?} */
    TooltipDirective.prototype._id;
    /** @type {?} */
    TooltipDirective.prototype._options;
    /** @type {?} */
    TooltipDirective.prototype._defaultOptions;
    /** @type {?} */
    TooltipDirective.prototype.componentSubscribe;
    /** @type {?} */
    TooltipDirective.prototype.tooltipValue;
    /** @type {?} */
    TooltipDirective.prototype.events;
    /** @type {?} */
    TooltipDirective.prototype.elementRef;
    /** @type {?} */
    TooltipDirective.prototype.componentFactoryResolver;
    /** @type {?} */
    TooltipDirective.prototype.appRef;
    /** @type {?} */
    TooltipDirective.prototype.injector;
}

//# sourceMappingURL=data:application/json;base64,