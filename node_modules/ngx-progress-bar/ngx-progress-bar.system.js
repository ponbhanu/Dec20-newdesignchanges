var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
System.register("ngx-progress-bar/index", ["@angular/core", "@angular/common"], function (exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var core_1, common_1, ProgressBar, ProgressBarModule;
    return {
        setters: [
            function (core_1_1) {
                core_1 = core_1_1;
            },
            function (common_1_1) {
                common_1 = common_1_1;
            }
        ],
        execute: function () {
            ProgressBar = (function () {
                function ProgressBar() {
                    this.value = 0;
                    this.max = 100;
                }
                ProgressBar.prototype.getProgress = function () {
                    if (this.max === 0)
                        return 0;
                    return this.value / this.max * 100;
                };
                return ProgressBar;
            }());
            __decorate([
                core_1.Input(),
                __metadata("design:type", Object)
            ], ProgressBar.prototype, "value", void 0);
            __decorate([
                core_1.Input(),
                __metadata("design:type", Object)
            ], ProgressBar.prototype, "max", void 0);
            __decorate([
                core_1.Input(),
                __metadata("design:type", String)
            ], ProgressBar.prototype, "title", void 0);
            ProgressBar = __decorate([
                core_1.Component({
                    selector: "progress-bar",
                    template: "\n<div class=\"progress\">\n    <div class=\"progress-bar\"\n        role=\"progressbar\"\n        [attr.aria-valuenow]=\"getProgress()\"\n        aria-valuemin=\"0\"\n        [attr.aria-valuemax]=\"getProgress()\" [ngStyle]=\"{ width: getProgress() + '%' }\">\n        <span [hidden]=\"!title\" class=\"progress-bar-title\">{{ title }}</span>\n        <span class=\"sr-only\">{{ getProgress() }}% Complete</span>\n    </div>\n</div>\n"
                })
            ], ProgressBar);
            exports_1("ProgressBar", ProgressBar);
            ProgressBarModule = (function () {
                function ProgressBarModule() {
                }
                return ProgressBarModule;
            }());
            ProgressBarModule = __decorate([
                core_1.NgModule({
                    imports: [
                        common_1.CommonModule
                    ],
                    declarations: [
                        ProgressBar
                    ],
                    exports: [
                        ProgressBar
                    ]
                })
            ], ProgressBarModule);
            exports_1("ProgressBarModule", ProgressBarModule);
        }
    };
});
System.register("ngx-progress-bar", ["ngx-progress-bar/index"], function (exports_2, context_2) {
    "use strict";
    var __moduleName = context_2 && context_2.id;
    function exportStar_1(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default") exports[n] = m[n];
        }
        exports_2(exports);
    }
    return {
        setters: [
            function (index_1_1) {
                exportStar_1(index_1_1);
            }
        ],
        execute: function () {
        }
    };
});
