System.register("ngx-progress-bar/index",["@angular/core","@angular/common"],function(e,t){var r,n,o,s;t&&t.id;return{setters:[function(e){r=e},function(e){n=e}],execute:function(){o=function(){function e(){this.value=0,this.max=100}return e.prototype.getProgress=function(){return 0===this.max?0:this.value/this.max*100},e}(),__decorate([r.Input(),__metadata("design:type",Object)],o.prototype,"value",void 0),__decorate([r.Input(),__metadata("design:type",Object)],o.prototype,"max",void 0),__decorate([r.Input(),__metadata("design:type",String)],o.prototype,"title",void 0),o=__decorate([r.Component({selector:"progress-bar",template:'\n<div class="progress">\n    <div class="progress-bar"\n        role="progressbar"\n        [attr.aria-valuenow]="getProgress()"\n        aria-valuemin="0"\n        [attr.aria-valuemax]="getProgress()" [ngStyle]="{ width: getProgress() + \'%\' }">\n        <span [hidden]="!title" class="progress-bar-title">{{ title }}</span>\n        <span class="sr-only">{{ getProgress() }}% Complete</span>\n    </div>\n</div>\n'})],o),e("ProgressBar",o),s=function(){function e(){}return e}(),s=__decorate([r.NgModule({imports:[n.CommonModule],declarations:[o],exports:[o]})],s),e("ProgressBarModule",s)}}}),System.register("ngx-progress-bar",["ngx-progress-bar/index"],function(e,t){function r(t){var r={};for(var n in t)"default"!==n&&(r[n]=t[n]);e(r)}t&&t.id;return{setters:[function(e){r(e)}],execute:function(){}}});